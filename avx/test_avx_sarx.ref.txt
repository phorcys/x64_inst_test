=== Testing 32-bit SARX instruction ===
Test 1: SARX(0x80000000, 1)
  Result:   0xC0000000
  Expected: 0xC0000000
  [OK]
Test 2: SARX(0x12345678, 0)
  Result:   0x12345678
  Expected: 0x12345678
  [OK]
Test 3: SARX(0x80000000, 31)
  Result:   0xFFFFFFFF
  Expected: 0xFFFFFFFF
  [OK]
Test 4: SARX(0x12345678, 32)
  Result:   0x12345678
  Expected: 0x12345678
  [OK]
Test 5: SARX(0x87654321, 4)
  Result:   0xF8765432
  Expected: 0xF8765432
  [OK]
Test 6: SARX(mem operand, 8)
  Input:    0xFEDCBA98
  Result:   0xFFFEDCBA
  Expected: 0xFFFEDCBA
  [OK]
Test 7: SARX(src, shift from memory)
  Input:    0x12345678
  Shift:    4
  Result:   0x01234567
  Expected: 0x01234567
  [OK]
=== Testing 64-bit SARX instruction ===
Test 1: SARX(0x8000000000000000, 1)
  Result:   0xC000000000000000
  Expected: 0xC000000000000000
  [OK]
Test 2: SARX(0x123456789ABCDEF0, 0)
  Result:   0x123456789ABCDEF0
  Expected: 0x123456789ABCDEF0
  [OK]
Test 3: SARX(0x8000000000000000, 63)
  Result:   0xFFFFFFFFFFFFFFFF
  Expected: 0xFFFFFFFFFFFFFFFF
  [OK]
Test 4: SARX(0x123456789ABCDEF0, 64)
  Result:   0x123456789ABCDEF0
  Expected: 0x123456789ABCDEF0
  [OK]
Test 5: SARX(0xFEDCBA9876543210, 16)
  Result:   0xFFFFFEDCBA987654
  Expected: 0xFFFFFEDCBA987654
  [OK]
Test 6: SARX(mem operand, 8)
  Input:    0x123456789ABCDEF0
  Result:   0x00123456789ABCDE
  Expected: 0x00123456789ABCDE
  [OK]
Test 7: SARX(src, shift from memory)
  Input:    0x123456789ABCDEF0
  Shift:    4
  Result:   0x0123456789ABCDEF
  Expected: 0x0123456789ABCDEF
  [OK]
All SARX tests completed successfully.
