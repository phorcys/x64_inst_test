Testing BLSR instruction
=======================

32-bit BLSR tests:
Test 1: BLSR(0) => Result: 0x00000000, Expected: 0x00000000 [PASS] | Flags: 0x0000000000000202
Test 2: BLSR(1) => Result: 0x00000000, Expected: 0x00000000 [PASS] | Flags: 0x0000000000000202
Test 3: BLSR(0x80000000) => Result: 0x00000000, Expected: 0x00000000 [PASS] | Flags: 0x0000000000000202
Test 4: BLSR(0xFFFFFFFF) => Result: 0xfffffffe, Expected: 0xfffffffe [PASS] | Flags: 0x0000000000000202
Test 5: BLSR(0x12345678) => Result: 0x12345670, Expected: 0x12345670 [PASS] | Flags: 0x0000000000000202
Test 6: BLSR(0x0000000F) => Result: 0x0000000e, Expected: 0x0000000e [PASS] | Flags: 0x0000000000000202

64-bit BLSR tests:
Test 1: BLSR(0) => Result: 0x0000000000000000, Expected: 0x0000000000000000 [PASS] | Flags: 0x0000000000000202
Test 2: BLSR(1) => Result: 0x0000000000000000, Expected: 0x0000000000000000 [PASS] | Flags: 0x0000000000000202
Test 3: BLSR(0x8000000000000000) => Result: 0x0000000000000000, Expected: 0x0000000000000000 [PASS] | Flags: 0x0000000000000202
Test 4: BLSR(0xFFFFFFFFFFFFFFFF) => Result: 0xfffffffffffffffe, Expected: 0xfffffffffffffffe [PASS] | Flags: 0x0000000000000202
Test 5: BLSR(0x123456789ABCDEF0) => Result: 0x123456789abcdee0, Expected: 0x123456789abcdee0 [PASS] | Flags: 0x0000000000000202
Test 6: BLSR(0x000000000000000F) => Result: 0x000000000000000e, Expected: 0x000000000000000e [PASS] | Flags: 0x0000000000000202

BLSR tests completed.
