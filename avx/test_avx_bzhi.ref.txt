Testing BZHI instruction
========================

32-bit BZHI tests:
Test 1: BZHI(0xFFFFFFFF, idx=0) => Result: 0x00000000, Expected: 0x00000000 [PASS] | Flags: 0x0244
Test 2: BZHI(0xFFFFFFFF, idx=1) => Result: 0x00000001, Expected: 0x00000001 [PASS] | Flags: 0x0200
Test 3: BZHI(0xFFFFFFFF, idx=8) => Result: 0x000000ff, Expected: 0x000000ff [PASS] | Flags: 0x0204
Test 4: BZHI(0xFFFFFFFF, idx=16) => Result: 0x0000ffff, Expected: 0x0000ffff [PASS] | Flags: 0x0204
Test 5: BZHI(0xFFFFFFFF, idx=31) => Result: 0x7fffffff, Expected: 0x7fffffff [PASS] | Flags: 0x0204
Test 6: BZHI(0xFFFFFFFF, idx=32) => Result: 0xffffffff, Expected: 0xffffffff [PASS] | Flags: 0x0285
Test 7: BZHI(0x12345678, idx=4) => Result: 0x00000008, Expected: 0x00000008 [PASS] | Flags: 0x0200
Test 8: BZHI(0x12345678, idx=12) => Result: 0x00000678, Expected: 0x00000678 [PASS] | Flags: 0x0204
Test 9: BZHI(0x12345678, idx=24) => Result: 0x00345678, Expected: 0x00345678 [PASS] | Flags: 0x0204
Test 10: BZHI(0x12345678, idx=32) => Result: 0x12345678, Expected: 0x12345678 [PASS] | Flags: 0x0205
Test 11: BZHI(0x80000000, idx=31) => Result: 0x00000000, Expected: 0x00000000 [PASS] | Flags: 0x0244
Test 12: BZHI(0x80000000, idx=32) => Result: 0x80000000, Expected: 0x80000000 [PASS] | Flags: 0x0285

64-bit BZHI tests:
Test 1: BZHI(0xFFFFFFFFFFFFFFFF, idx=0) => Result: 0x0000000000000000, Expected: 0x0000000000000000 [PASS] | Flags: 0x0244
Test 2: BZHI(0xFFFFFFFFFFFFFFFF, idx=1) => Result: 0x0000000000000001, Expected: 0x0000000000000001 [PASS] | Flags: 0x0200
Test 3: BZHI(0xFFFFFFFFFFFFFFFF, idx=8) => Result: 0x00000000000000ff, Expected: 0x00000000000000ff [PASS] | Flags: 0x0204
Test 4: BZHI(0xFFFFFFFFFFFFFFFF, idx=16) => Result: 0x000000000000ffff, Expected: 0x000000000000ffff [PASS] | Flags: 0x0204
Test 5: BZHI(0xFFFFFFFFFFFFFFFF, idx=32) => Result: 0x00000000ffffffff, Expected: 0x00000000ffffffff [PASS] | Flags: 0x0204
Test 6: BZHI(0xFFFFFFFFFFFFFFFF, idx=48) => Result: 0x0000ffffffffffff, Expected: 0x0000ffffffffffff [PASS] | Flags: 0x0204
Test 7: BZHI(0xFFFFFFFFFFFFFFFF, idx=63) => Result: 0x7fffffffffffffff, Expected: 0x7fffffffffffffff [PASS] | Flags: 0x0204
Test 8: BZHI(0xFFFFFFFFFFFFFFFF, idx=64) => Result: 0xffffffffffffffff, Expected: 0xffffffffffffffff [PASS] | Flags: 0x0285
Test 9: BZHI(0x123456789ABCDEF0, idx=4) => Result: 0x0000000000000000, Expected: 0x0000000000000000 [PASS] | Flags: 0x0244
Test 10: BZHI(0x123456789ABCDEF0, idx=16) => Result: 0x000000000000def0, Expected: 0x000000000000def0 [PASS] | Flags: 0x0204
Test 11: BZHI(0x123456789ABCDEF0, idx=32) => Result: 0x000000009abcdef0, Expected: 0x000000009abcdef0 [PASS] | Flags: 0x0204
Test 12: BZHI(0x123456789ABCDEF0, idx=48) => Result: 0x000056789abcdef0, Expected: 0x000056789abcdef0 [PASS] | Flags: 0x0204
Test 13: BZHI(0x123456789ABCDEF0, idx=64) => Result: 0x123456789abcdef0, Expected: 0x123456789abcdef0 [PASS] | Flags: 0x0205
Test 14: BZHI(0x8000000000000000, idx=63) => Result: 0x0000000000000000, Expected: 0x0000000000000000 [PASS] | Flags: 0x0244
Test 15: BZHI(0x8000000000000000, idx=64) => Result: 0x8000000000000000, Expected: 0x8000000000000000 [PASS] | Flags: 0x0285

BZHI tests completed.
