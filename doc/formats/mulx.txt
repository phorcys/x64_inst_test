  • Index
  • December 2023

MULX — Unsigned Multiply Without Affecting Flags

              Opcode/Instruction               Op/ En 64/32-bit Mode CPUID Feature Flag                               Description
VEX.LZ.F2.0F38.W0 F6 /r MULX r32a, r32b, r/m32 RVM    V/V            BMI2               Unsigned multiply of r/m32 with EDX without affecting arithmetic flags.
VEX.LZ.F2.0F38.W1 F6 /r MULX r64a, r64b, r/m64 RVM    V/N.E.         BMI2               Unsigned multiply of r/m64 with RDX without affecting arithmetic flags.

Instruction Operand Encoding ¶

Op/En   Operand 1    Operand 2     Operand 3                 Operand 4
RVM   ModRM:reg (w) VEX.vvvv (w) ModRM:r/m (r) RDX/EDX is implied 64/32 bits source

Description ¶

Performs an unsigned multiplication of the implicit source operand (EDX/RDX) and the specified source operand (the third operand) and stores the low half of the result in the second destination (second operand), the high half of the result in the first
destination operand (first operand), without reading or writing the arithmetic flags. This enables efficient programming where the software can interleave add with carry operations and multiplications.

If the first and second operand are identical, it will contain the high half of the multiplication result.

This instruction is not supported in real mode and virtual-8086 mode. The operand size is always 32 bits if not in 64-bit mode. In 64-bit mode operand size 64 requires VEX.W1. VEX.W1 is ignored in non-64-bit modes. An attempt to execute this instruction
with VEX.L not equal to 0 will cause #UD.

