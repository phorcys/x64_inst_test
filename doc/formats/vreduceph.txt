  • Index
  • December 2023

VREDUCEPH — Perform Reduction Transformation on Packed FP16 Values

    Instruction En bit Mode Flag Support Instruction En bit Mode Flag Support 64/32 CPUID Feature Instruction En bit Mode Flag CPUID Feature
Instruction En bit Mode Flag Op/ 64/32 CPUID Feature Instruction En bit Mode Flag 64/32 CPUID Feature Instruction En bit Mode Flag CPUID Feature   Support                                                   Description
                                              Instruction En bit Mode Flag Op/ 64/32 CPUID Feature
                                                                                                                                                           AVX512-FP16 Perform reduction transformation on packed FP16 values in xmm2/m128/m16bcst by
EVEX.128.NP.0F3A.W0 56 /r /ib VREDUCEPH xmm1{k1}{z}, xmm2/m128/m16bcst, imm8                                                                     A V/V     AVX512VL    subtracting a number of fraction bits specified by the imm8 field. Store the result in
                                                                                                                                                                       xmm1 subject to writemask k1.
                                                                                                                                                           AVX512-FP16 Perform reduction transformation on packed FP16 values in ymm2/m256/m16bcst by
EVEX.256.NP.0F3A.W0 56 /r /ib VREDUCEPH ymm1{k1}{z}, ymm2/m256/m16bcst, imm8                                                                     A V/V     AVX512VL    subtracting a number of fraction bits specified by the imm8 field. Store the result in
                                                                                                                                                                       ymm1 subject to writemask k1.
                                                                                                                                                                       Perform reduction transformation on packed FP16 values in zmm2/m512/m16bcst by
EVEX.512.NP.0F3A.W0 56 /r /ib VREDUCEPH zmm1{k1}{z}, zmm2/m512/m16bcst {sae}, imm8                                                               A V/V     AVX512-FP16 subtracting a number of fraction bits specified by the imm8 field. Store the result in
                                                                                                                                                                       zmm1 subject to writemask k1.

Instruction Operand Encoding ¶

Op/En Tuple   Operand 1      Operand 2    Operand 3 Operand 4
A     Full  ModRM:reg (w)  ModRM:r/m (r)  imm8 (r)  N/A

Description ¶

This instruction performs a reduction transformation of the packed binary encoded FP16 values in the source operand (the second operand) and store the reduced results in binary FP format to the destination operand (the first operand) under the writemask
k1.

The reduction transformation subtracts the integer part and the leading M fractional bits from the binary FP source value, where M is a unsigned integer specified by imm8[7:4]. Specifically, the reduction transformation can be expressed as:

dest = src − (ROUND(2^M * src)) * 2^−M

where ROUND() treats src, 2^M, and their product as binary FP numbers with normalized significand and biased exponents.

The magnitude of the reduced result can be expressed by considering src = 2^p * man2, where ‘man2’ is the normalized significand and ‘p’ is the unbiased exponent.

Then if RC=RNE: 0 ≤ |ReducedResult| ≤ 2^−M−1.

Then if RC ≠ RNE: 0 ≤ |ReducedResult| < 2^−M.

This instruction might end up with a precision exception set. However, in case of SPE set (i.e., Suppress Precision Exception, which is imm8[3]=1), no precision exception is reported.

This instruction may generate tiny non-zero result. If it does so, it does not report underflow exception, even if underflow exceptions are unmasked (UM flag in MXCSR register is 0).

For special cases, see Table 5-30.

           Input value              Round Mode      Returned Value
|Src1| < 2^−^M^−^1                 RNE          Src1
                                   RU, Src1 > 0 Round(Src1 − 2^−^M)^1
|Src1| < 2^−M                      RU, Src1 ≤ 0 Src1
                                   RD, Src1 ≥ 0 Src1
                                   RD, Src1 < 0 Round(Src1 + 2^−^M)
Src1 = ±0 or Dest = ±0 (Src1 ≠ ∞)  NOT RD       +0.0
                                   RD           −0.0
Src1 = ±∞                          Any          +0.0
Src1 = ±NAN                        Any          QNaN (Src1)


Table 5-30. VREDUCEPH/VREDUCESH Special Cases

    1. The Round(.) function uses rounding controls specified by (imm8[2]? MXCSR.RC: imm8[1:0]).

