  • Index
  • December 2023

SUBSS — Subtract Scalar Single Precision Floating-Point Value

                       Opcode/Instruction                        Op / En 64/32 bit Mode Support CPUID Feature Flag                                                          Description
F3 0F 5C /r SUBSS xmm1, xmm2/m32                                 A       V/V                    SSE                Subtract the low single precision floating-point value in xmm2/m32 from xmm1 and store the result in xmm1.
VEX.LIG.F3.0F.WIG 5C /r VSUBSS xmm1,xmm2, xmm3/m32               B       V/V                    AVX                Subtract the low single precision floating-point value in xmm3/m32 from xmm2 and store the result in xmm1.
EVEX.LLIG.F3.0F.W0 5C /r VSUBSS xmm1 {k1}{z}, xmm2, xmm3/m32{er} C       V/V                    AVX512F            Subtract the low single precision floating-point value in xmm3/m32 from xmm2 and store the result in xmm1 under writemask k1.

Instruction Operand Encoding ¶

Op/En  Tuple Type       Operand 1       Operand 2     Operand 3   Operand 4
A     N/A           ModRM:reg (r, w)  ModRM:r/m (r) N/A           N/A
B     N/A           ModRM:reg (w)     VEX.vvvv (r)  ModRM:r/m (r) N/A
C     Tuple1 Scalar ModRM:reg (w)     EVEX.vvvv (r) ModRM:r/m (r) N/A

Description ¶

Subtract the low single precision floating-point value from the second source operand and the first source operand and store the double precision floating-point result in the low doubleword of the destination operand.

The second source operand can be an XMM register or a 32-bit memory location. The first source and destination operands are XMM registers.

128-bit Legacy SSE version: The destination and first source operand are the same. Bits (MAXVL-1:32) of the corresponding destination register remain unchanged.

VEX.128 and EVEX encoded versions: Bits (127:32) of the XMM register destination are copied from corresponding bits in the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed.

EVEX encoded version: The low doubleword element of the destination operand is updated according to the write-mask.

Software should ensure VSUBSS is encoded with VEX.L=0. Encoding VSUBSD with VEX.L=1 may encounter unpredictable behavior across different processor generations.

