  • Index
  • December 2023

XSETBV — Set Extended Control Register

  Opcode    Instruction Op/En 64-Bit Mode Compat/Leg Mode                       Description
NP 0F 01 D1 XSETBV      ZO    Valid       Valid           Write the value in EDX:EAX to the XCR specified by ECX.

Instruction Operand Encoding ¶

Op/En Operand 1  Operand 2  Operand 3  Operand 4
ZO    N/A        N/A        N/A        N/A

Description ¶

Writes the contents of registers EDX:EAX into the 64-bit extended control register (XCR) specified in the ECX register. (On processors that support the Intel 64 architecture, the high-order 32 bits of RCX are ignored.) The contents of the EDX register
are copied to high-order 32 bits of the selected XCR and the contents of the EAX register are copied to low-order 32 bits of the XCR. (On processors that support the Intel 64 architecture, the high-order 32 bits of each of RAX and RDX are ignored.)
Undefined or reserved bits in an XCR should be set to values previously read.

This instruction must be executed at privilege level 0 or in real-address mode; otherwise, a general protection exception #GP(0) is generated. Specifying a reserved or unimplemented XCR in ECX will also cause a general protection exception. The processor
will also generate a general protection exception if software attempts to write to reserved bits in an XCR.

Currently, only XCR0 is supported. Thus, all other values of ECX are reserved and will cause a #GP(0). Note that bit 0 of XCR0 (corresponding to x87 state) must be set to 1; the instruction will cause a #GP(0) if an attempt is made to clear this bit. In
addition, the instruction causes a #GP(0) if an attempt is made to set XCR0[2] (AVX state) while clearing XCR0[1] (SSE state); it is necessary to set both bits to use AVX instructions; Section 13.3, “Enabling the XSAVE Feature Set and XSAVE-Enabled
Features,” of Intel^® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1.

