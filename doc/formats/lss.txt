  • Index
  • December 2023

LDS/LES/LFS/LGS/LSS — Load Far Pointer

    Opcode      Instruction   Op/En 64-Bit Mode Compat/Leg Mode                 Description
C5 /r          LDS r16,m16:16 RM    Invalid     Valid            Load DS:r16 with far pointer from memory.
C5 /r          LDS r32,m16:32 RM    Invalid     Valid            Load DS:r32 with far pointer from memory.
0F B2 /r       LSS r16,m16:16 RM    Valid       Valid            Load SS:r16 with far pointer from memory.
0F B2 /r       LSS r32,m16:32 RM    Valid       Valid            Load SS:r32 with far pointer from memory.
REX + 0F B2 /r LSS r64,m16:64 RM    Valid       N.E.             Load SS:r64 with far pointer from memory.
C4 /r          LES r16,m16:16 RM    Invalid     Valid            Load ES:r16 with far pointer from memory.
C4 /r          LES r32,m16:32 RM    Invalid     Valid            Load ES:r32 with far pointer from memory.
0F B4 /r       LFS r16,m16:16 RM    Valid       Valid            Load FS:r16 with far pointer from memory.
0F B4 /r       LFS r32,m16:32 RM    Valid       Valid            Load FS:r32 with far pointer from memory.
REX + 0F B4 /r LFS r64,m16:64 RM    Valid       N.E.             Load FS:r64 with far pointer from memory.
0F B5 /r       LGS r16,m16:16 RM    Valid       Valid            Load GS:r16 with far pointer from memory.
0F B5 /r       LGS r32,m16:32 RM    Valid       Valid            Load GS:r32 with far pointer from memory.
REX + 0F B5 /r LGS r64,m16:64 RM    Valid       N.E.             Load GS:r64 with far pointer from memory.

Instruction Operand Encoding ¶

Op/En   Operand 1      Operand 2    Operand 3 Operand 4
RM    ModRM:reg (w)  ModRM:r/m (r)  N/A       N/A

Description ¶

Loads a far pointer (segment selector and offset) from the second operand (source operand) into a segment register and the first operand (destination operand). The source operand specifies a 48-bit or a 32-bit pointer in memory depending on the current
setting of the operand-size attribute (32 bits or 16 bits, respectively). The instruction opcode and the destination operand specify a segment register/general-purpose register pair. The 16-bit segment selector from the source operand is loaded into the
segment register specified with the opcode (DS, SS, ES, FS, or GS). The 32-bit or 16-bit offset is loaded into the register specified with the destination operand.

If one of these instructions is executed in protected mode, additional information from the segment descriptor pointed to by the segment selector in the source operand is loaded in the hidden part of the selected segment register.

Also in protected mode, a NULL selector (values 0000 through 0003) can be loaded into DS, ES, FS, or GS registers without causing a protection exception. (Any subsequent reference to a segment whose corresponding segment register is loaded with a NULL
selector, causes a general-protection exception (#GP) and no memory reference to the segment occurs.)

In 64-bit mode, the instruction’s default operation size is 32 bits. Using a REX prefix in the form of REX.W promotes operation to specify a source operand referencing an 80-bit pointer (16-bit selector, 64-bit offset) in memory. Using a REX prefix in
the form of REX.R permits access to additional registers (R8-R15). See the summary chart at the beginning of this section for encoding data and limits.

