  • Index
  • December 2023

VSCALEFPH — Scale Packed FP16 Values with FP16 Values

Instruction En bit Mode Flag Support Instruction En bit Mode Flag Support 64/32 CPUID Feature Instruction En bit Mode Flag CPUID Feature Instruction En bit Mode Flag
   Op/ 64/32 CPUID Feature Instruction En bit Mode Flag 64/32 CPUID Feature Instruction En bit Mode Flag CPUID Feature Instruction En bit Mode Flag Op/ 64/32 CPUID      Support                                        Description
                                                                               Feature
EVEX.128.66.MAP6.W0 2C /r VSCALEFPH xmm1{k1}{z}, xmm2, xmm3/m128/m16bcst                                                                                               A V/V     AVX512-FP16 Scale the packed FP16 values in xmm2 using values from xmm3/m128/
                                                                                                                                                                                 AVX512VL    m16bcst, and store the result in xmm1 subject to writemask k1.
EVEX.256.66.MAP6.W0 2C /r VSCALEFPH ymm1{k1}{z}, ymm2, ymm3/m256/m16bcst                                                                                               A V/V     AVX512-FP16 Scale the packed FP16 values in ymm2 using values from ymm3/m256/
                                                                                                                                                                                 AVX512VL    m16bcst, and store the result in ymm1 subject to writemask k1.
EVEX.512.66.MAP6.W0 2C /r VSCALEFPH zmm1{k1}{z}, zmm2, zmm3/m512/m16bcst {er}                                                                                          A V/V     AVX512-FP16 Scale the packed FP16 values in zmm2 using values from zmm3/m512/
                                                                                                                                                                                             m16bcst, and store the result in zmm1 subject to writemask k1.

Instruction Operand Encoding ¶

Op/En Tuple   Operand 1     Operand 2     Operand 3    Operand 4
A     Full  ModRM:reg (w)  VEX.vvvv (r) ModRM:r/m (r)  N/A

Description ¶

This instruction performs a floating-point scale of the packed FP16 values in the first source operand by multiplying it by 2 to the power of the FP16 values in second source operand. The destination elements are updated according to the writemask.

The equation of this operation is given by:

zmm1 := zmm2 * 2^floor(zmm3).

Floor(zmm3) means maximum integer value ≤ zmm3.

If the result cannot be represented in FP16, then the proper overflow response (for positive scaling operand), or the proper underflow response (for negative scaling operand), is issued. The overflow and underflow responses are dependent on the rounding
mode (for IEEE-compliant rounding), as well as on other settings in MXCSR (exception mask bits), and on the SAE bit.

Handling of special-case input values are listed in Table 5-41 and Table 5-42.

   Src1                                Src2                                      Set IE
               ±NaN          +INF             −INF       0/Denorm/Norm
±QNaN       QNaN(Src1) +INF              +0              QNaN(Src1)     IF either source is SNaN
±SNaN       QNaN(Src1) QNaN(Src1)        QNaN(Src1)      QNaN(Src1)     YES
±INF        QNaN(Src2) Src1              QNaN_Indefinite Src1           IF Src2 is SNaN or −INF
±0          QNaN(Src2) QNaN_Indefinite   Src1            Src1           IF Src2 is SNaN or +INF
Denorm/Norm QNaN(Src2) ±INF (Src1 sign)  ±0 (Src1 sign)  Compute Result IF Src2 is SNaN


Table 5-41. VSCALEFPH/VSCALEFSH Special Cases

  Special Case                    Returned Value                  Faults
|result| < 2^-24  ±0 or ±Min-Denormal (Src1 sign)                Underflow
|result| ≥ 2^16   ±INF (Src1 sign) or ±Max-Denormal (Src1 sign)  Overflow


Table 5-42. Additional VSCALEFPH/VSCALEFSH Special Cases

