  • Index
  • December 2023

FPTAN — Partial Tangent

Opcode Instruction 64-Bit Mode Compat/Leg Mode                                Description
D9 F2  FPTAN       Valid       Valid           Replace ST(0) with its approximate tangent and push 1 onto the FPU stack.

Description ¶

Computes the approximate tangent of the source operand in register ST(0), stores the result in ST(0), and pushes a 1.0 onto the FPU register stack. The source operand must be given in radians and must be less than ±2^63. The following table shows the
unmasked results obtained when computing the partial tangent of various classes of numbers, assuming that underflow does not occur.

ST(0) SRC  ST(0) DEST
−∞         *
−F         − F to + F
−0         -0
+0         +0
+F         − F to + F
+∞         *
NaN        NaN


Table 3-33. FPTAN Results

    F Means finite floating-point value.

    * Indicatesfloating-pointinvalid-arithmetic-operand(#IA)exception.

If the source operand is outside the acceptable range, the C2 flag in the FPU status word is set, and the value in register ST(0) remains unchanged. The instruction does not raise an exception when the source operand is out of range. It is up to the
program to check the C2 flag for out-of-range conditions. Source values outside the range − 2^63 to +2^63 can be reduced to the range of the instruction by subtracting an appropriate integer multiple of 2π. However, even within the range -2^63 to +2^63,
inaccurate results can occur because the finite approximation of π used internally for argument reduction is not sufficient in all cases. Therefore, for accurate results it is safe to apply FPTAN only to arguments reduced accurately in software, to a
value smaller in absolute value than 3π/8. See the sections titled “Approximation of Pi” and “Transcendental Instruction Accuracy” in Chapter 8 of the Intel^® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1, for a discussion of the
proper value to use for π in performing such reductions.

The value 1.0 is pushed onto the register stack after the tangent has been computed to maintain compatibility with the Intel 8087 and Intel287 math coprocessors. This operation also simplifies the calculation of other trigonometric functions. For
instance, the cotangent (which is the reciprocal of the tangent) can be computed by executing a FDIVR instruction after the FPTAN instruction.

This instruction’s operation is the same in non-64-bit modes and 64-bit mode.

