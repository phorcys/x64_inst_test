  • Index
  • December 2023

MOVNTI — Store Doubleword Using Non-Temporal Hint

       Opcode / Instruction         Op/En 64/32 bit Mode Support CPUID Feature Flag                        Description
NP 0F C3 /r MOVNTI m32, r32         MR    V/V                    SSE2               Move doubleword from r32 to m32 using non-temporal hint.
NP REX.W + 0F C3 /r MOVNTI m64, r64 MR    V/N.E.                 SSE2               Move quadword from r64 to m64 using non-temporal hint.

Instruction Operand Encoding ¶

Op/En   Operand 1      Operand 2    Operand 3 Operand 4
MR    ModRM:r/m (w)  ModRM:reg (r)  N/A       N/A

Description ¶

Moves the doubleword integer in the source operand (second operand) to the destination operand (first operand) using a non-temporal hint to minimize cache pollution during the write to memory. The source operand is a general-purpose register. The
destination operand is a 32-bit memory location.

The non-temporal hint is implemented by using a write combining (WC) memory type protocol when writing the data to memory. Using this protocol, the processor does not write the data into the cache hierarchy, nor does it fetch the corresponding cache line
from memory into the cache hierarchy. The memory type of the region being written to can override the non-temporal hint, if the memory address specified for the non-temporal store is in an uncacheable (UC) or write protected (WP) memory region. For more
information on non-temporal stores, see “Caching of Temporal vs. Non-Temporal Data” in Chapter 10 in the Intel^® 64 and IA-32 Architectures Software Developer’s Manual, Volume 1.

Because the WC protocol uses a weakly-ordered memory consistency model, a fencing operation implemented with the SFENCE or MFENCE instruction should be used in conjunction with MOVNTI instructions if multiple processors might use different memory types
to read/write the destination memory locations.

In 64-bit mode, the instruction’s default operation size is 32 bits. Use of the REX.R prefix permits access to additional registers (R8-R15). Use of the REX.W prefix promotes operation to 64 bits. See the summary chart at the beginning of this section
for encoding data and limits.

