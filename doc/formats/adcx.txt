  • Index
  • December 2023

ADCX — Unsigned Integer Addition of Two Operands With Carry Flag

         Opcode/Instruction          Op/En 64/32bit Mode Support CPUID Feature Flag                         Description
66 0F 38 F6 /r ADCX r32, r/m32       RM    V/V                   ADX                Unsigned addition of r32 with CF, r/m32 to r32, writes CF.
66 REX.w 0F 38 F6 /r ADCX r64, r/m64 RM    V/N.E.                ADX                Unsigned addition of r64 with CF, r/m64 to r64, writes CF.

Instruction Operand Encoding ¶

Op/En     Operand 1       Operand 2    Operand 3 Operand 4
RM    ModRM:reg (r, w)  ModRM:r/m (r)  N/A       N/A

Description ¶

Performs an unsigned addition of the destination operand (first operand), the source operand (second operand) and the carry-flag (CF) and stores the result in the destination operand. The destination operand is a general-purpose register, whereas the
source operand can be a general-purpose register or memory location. The state of CF can represent a carry from a previous addition. The instruction sets the CF flag with the carry generated by the unsigned addition of the operands.

The ADCX instruction is executed in the context of multi-precision addition, where we add a series of operands with a carry-chain. At the beginning of a chain of additions, we need to make sure the CF is in a desired initial state. Often, this initial
state needs to be 0, which can be achieved with an instruction to zero the CF (e.g. XOR).

This instruction is supported in real mode and virtual-8086 mode. The operand size is always 32 bits if not in 64-bit mode.

In 64-bit mode, the default operation size is 32 bits. Using a REX Prefix in the form of REX.R permits access to additional registers (R8-15). Using REX Prefix in the form of REX.W promotes operation to 64 bits.

ADCX executes normally either inside or outside a transaction region.

Note: ADCX defines the OF flag differently than the ADD/ADC instructions as defined in the Intel^® 64 and IA-32 Architectures Software Developer’s Manual, Volume 2A.

