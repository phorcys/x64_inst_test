  • Index
  • December 2023

CVTSD2SS — Convert Scalar Double Precision Floating-Point Value to Scalar Single PrecisionFloating-Point Value

                     Opcode/Instruction                        Op /     64/32 bit Mode      CPUID Feature                                                                      Description
                                                                En         Support              Flag
F2 0F 5A /r CVTSD2SS xmm1, xmm2/m64                           A      V/V                  SSE2              Convert one double precision floating-point value in xmm2/m64 to one single precision floating-point value in xmm1.
VEX.LIG.F2.0F.WIG 5A /r VCVTSD2SS xmm1,xmm2, xmm3/m64         B      V/V                  AVX               Convert one double precision floating-point value in xmm3/m64 to one single precision floating-point value and merge with high bits in xmm2.
EVEX.LLIG.F2.0F.W1 5A /r VCVTSD2SS xmm1 {k1}{z}, xmm2, xmm3/  C      V/V                  AVX512F           Convert one double precision floating-point value in xmm3/m64 to one single precision floating-point value and merge with high bits in xmm2 under
m64{er}                                                                                                     writemask k1.

Instruction Operand Encoding ¶

Op/En  Tuple Type       Operand 1       Operand 2     Operand 3   Operand 4
A     N/A           ModRM:reg (r, w)  ModRM:r/m (r) N/A           N/A
B     N/A           ModRM:reg (w)     VEX.vvvv (r)  ModRM:r/m (r) N/A
C     Tuple1 Scalar ModRM:reg (w)     EVEX.vvvv (r) ModRM:r/m (r) N/A

Description ¶

Converts a double precision floating-point value in the “convert-from” source operand (the second operand in SSE2 version, otherwise the third operand) to a single precision floating-point value in the destination operand.

When the “convert-from” operand is an XMM register, the double precision floating-point value is contained in the low quadword of the register. The result is stored in the low doubleword of the destination operand. When the conversion is inexact, the
value returned is rounded according to the rounding control bits in the MXCSR register.

128-bit Legacy SSE version: The “convert-from” source operand (the second operand) is an XMM register or memory location. Bits (MAXVL-1:32) of the corresponding destination register remain unchanged. The destination operand is an XMM register.

VEX.128 and EVEX encoded versions: The “convert-from” source operand (the third operand) can be an XMM register or a 64-bit memory location. The first source and destination operands are XMM registers. Bits (127:32) of the XMM register destination are
copied from the corresponding bits in the first source operand. Bits (MAXVL-1:128) of the destination register are zeroed.

EVEX encoded version: the converted result in written to the low doubleword element of the destination under the writemask.

Software should ensure VCVTSD2SS is encoded with VEX.L=0. Encoding VCVTSD2SS with VEX.L=1 may encounter unpredictable behavior across different processor generations.

