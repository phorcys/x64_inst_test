  • Index
  • December 2023

BNDMK — Make Bounds

    Opcode/Instruction     Op/En 64/32 bit Mode Support CPUID Feature Flag                         Description
F3 0F 1B /r BNDMK bnd, m32 RM    N.E./V                 MPX                Make lower and upper bounds from m32 and store them in bnd.
F3 0F 1B /r BNDMK bnd, m64 RM    V/N.E.                 MPX                Make lower and upper bounds from m64 and store them in bnd.

Instruction Operand Encoding ¶

Op/En   Operand 1      Operand 2    Operand 3
RM    ModRM:reg (w)  ModRM:r/m (r)  N/A

Description ¶

Makes bounds from the second operand and stores the lower and upper bounds in the bound register bnd. The second operand must be a memory operand. The content of the base register from the memory operand is stored in the lower bound bnd.LB. The 1's
complement of the effective address of m32/m64 is stored in the upper bound b.UB. Computation of m32/m64 has identical behavior to LEA.

This instruction does not cause any memory access, and does not read or write any flags.

If the instruction did not specify base register, the lower bound will be zero. The reg-reg form of this instruction retains legacy behavior (NOP).

The instruction causes an invalid-opcode exception (#UD) if executed in 64-bit mode with RIP-relative addressing.

