  • Index
  • December 2023

BNDCU/BNDCN — Check Upper Bound

     Opcode/Instruction      Op/En 64/32 bit Mode Support CPUID Feature Flag                                                      Description
F2 0F 1A /r BNDCU bnd, r/m32 RM    N.E./V                 MPX                Generate a #BR if the address in r/m32 is higher than the upper bound in bnd.UB (bnb.UB in 1's complement form).
F2 0F 1A /r BNDCU bnd, r/m64 RM    V/N.E.                 MPX                Generate a #BR if the address in r/m64 is higher than the upper bound in bnd.UB (bnb.UB in 1's complement form).
F2 0F 1B /r BNDCN bnd, r/m32 RM    N.E./V                 MPX                Generate a #BR if the address in r/m32 is higher than the upper bound in bnd.UB (bnb.UB not in 1's complement form).
F2 0F 1B /r BNDCN bnd, r/m64 RM    V/N.E.                 MPX                Generate a #BR if the address in r/m64 is higher than the upper bound in bnd.UB (bnb.UB not in 1's complement form).

Instruction Operand Encoding ¶

Op/En   Operand 1      Operand 2    Operand 3
RM    ModRM:reg (w)  ModRM:r/m (r)  N/A

Description ¶

Compare the address in the second operand with the upper bound in bnd. The second operand can be either a register or a memory operand. If the address is higher than the upper bound in bnd.UB, it will set BNDSTATUS to 01H and signal a #BR exception.

BNDCU perform 1’s complement operation on the upper bound of bnd first before proceeding with address comparison. BNDCN perform address comparison directly using the upper bound in bnd that is already reverted out of 1’s complement form.

This instruction does not cause any memory access, and does not read or write any flags.

Effective address computation of m32/64 has identical behavior to LEA

